spring.application.name=api-gateway
server.forward-headers-strategy=framework
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

# Global CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://localhost:8080,https://dev-k6vjpfkbkgmdsry6.us.auth0.com
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,DELETE,PUT,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

# Default Filters Configuration
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

# Enable the Eureka client
eureka.client.enabled=true

# Register with Eureka server without waiting for it to start successfully
eureka.client.register-with-eureka=true

# Fetch registry information from Eureka server during startup
eureka.client.fetch-registry=true

# discovery-service
spring.cloud.gateway.routes[0].id=eureka-server
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

# discovery-service-static
spring.cloud.gateway.routes[1].id=eureka-server-static
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**

#user-service
spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://user-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/user/**
#spring.cloud.gateway.routes[2].predicates[1]=Path=/oauth2/authorization/auth0/**

#search-service
spring.cloud.gateway.routes[3].id=search-service
spring.cloud.gateway.routes[3].uri=lb://search-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/search/**

#content-management-service
spring.cloud.gateway.routes[4].id=content-management-service
spring.cloud.gateway.routes[4].uri=lb://content-management-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/blog/**
spring.cloud.gateway.routes[4].predicates[1]=Path=/api/v1/diary/**
spring.cloud.gateway.routes[4].predicates[2]=Path=/api/v1/plan/**

#chat-service
spring.cloud.gateway.routes[5].id=chat-service
spring.cloud.gateway.routes[5].uri=lb://chat-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/message/**

#relation-service
spring.cloud.gateway.routes[6].id=interaction-service
spring.cloud.gateway.routes[6].uri=lb://interaction-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/user/**
spring.cloud.gateway.routes[6].predicates[1]=Path=/api/v1/blog/**
spring.cloud.gateway.routes[6].predicates[2]=Path=/api/v1/comment/**
spring.cloud.gateway.routes[6].predicates[3]=Path=/api/v1/like/**
spring.cloud.gateway.routes[6].predicates[4]=Path=/api/v1/follow/**


#chat-service
spring.cloud.gateway.routes[7].id=notification-service
spring.cloud.gateway.routes[7].uri=lb://notification-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/v1/notification/**

springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.my_profile.api_gateway
